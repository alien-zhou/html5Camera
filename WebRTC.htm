<!DOCTYPE html> 
<html>
<head>

  <meta charset="utf-8">
  <meta name="description" content="WebRTC">
  <meta name="viewport" content="width=device-width, user-scalable=yes, initial-scale=1, maximum-scale=1">
  <meta itemprop="description" content="Client-side WebRTC code samples"> 
  <meta itemprop="name" content="WebRTC">
  <meta name="mobile-web-app-capable" content="yes">
  <meta id="theme-color" name="theme-color" content="#ffffff">  
  <title>WebRTC</title>

  

</head>

<body>
 
 
  
    <video id="gum-local" autoplay playsinline></video>
    <div id="errorMsg"></div>
    
 
 
    <script type="text/javascript"> 
    var errorElement = document.querySelector('#errorMsg');
    var video = document.querySelector('video');
         
    var constraints = window.constraints = {
        audio: false,
        video: true
    };

    function handleSuccess(stream) {
        var videoTracks = stream.getVideoTracks();
        console.log('Got stream with constraints:', constraints);
        console.log('Using video device: ' + videoTracks[0].label);
        stream.oninactive = function () {
            console.log('Stream inactive');
        };
        window.stream = stream; // make variable available to browser console
        video.srcObject = stream;
    }

    function handleError(error) {
        if (error.name === 'ConstraintNotSatisfiedError') {
            errorMsg('The resolution ' + constraints.video.width.exact + 'x' +
                constraints.video.width.exact + ' px is not supported by your device.');
        } else if (error.name === 'PermissionDeniedError') {
            errorMsg('Permissions have not been granted to use your camera and ' +
              'microphone, you need to allow the page access to your devices in ' +
              'order for the demo to work.');
        }
        errorMsg('getUserMedia error: ' + error.name, error);
    }

    function errorMsg(msg, error) {
        errorElement.innerHTML += '<p>' + msg + '</p>';
        if (typeof error !== 'undefined') {
            console.error(error);
        }
    }

    navigator.mediaDevices.getUserMedia(constraints).then(handleSuccess).catch(handleError);



    </script>
 

</body>
</html>
